#!/usr/bin/env ruby
#
# Utilize the info.yaml test cases to make a directory of files that can be
# committed, pushed, and verified as correctly Restyled on production (along
# with configuration and support, so it works).
#
###
require "fileutils"
require "yaml"

def system_(*args)
  system(*args) or raise "system error: #{args.inspect}"
end

restylers = `./build/restyler-meta names`.each_line.map do |ln|
  restyler = ln.chomp

  FileUtils.mkdir_p "test/integration/#{restyler}"
  tests = YAML.load(`./build/restyler-meta get #{restyler} metadata.tests`)
  tests.each.with_index do |test, n|
    # N.B. if different cases need the same support file this won't work.
    # If/when that happens we can consider some kind of workaround.
    if support = test["support"]
      support_path = support.fetch("path")
      File.write(support_path, support.fetch("contents"))
      system_("git", "add", support_path)
    end

    ext = test["extension"] || "example"
    path = "test/integration/#{restyler}/test-file-#{n}.#{ext}"
    contents = test.fetch("contents")

    # Can't commit CRLF, so skip that test case
    unless contents.include?("\r\n")
      File.write(path, contents)
      system_("git", "add", path)
    end
  end

  {
    restyler => {
      "enabled" => true,
      "include" => ["test/integration/#{restyler}/**/*"]
    }
  }
end

File.write(".restyled.yaml", YAML.dump(restylers))
system_("git", "add", ".restyled.yaml")
system_("git", "commit", "-m", "Update test/integration files")
